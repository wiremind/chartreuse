"""inital

Revision ID: 55622187799e
Revises:
Create Date: 2025-06-06 18:28:21.202381

Have a look to examples https://github.com/xzkostyan/clickhouse-sqlalchemy-alembic-example

"""

import sqlalchemy as sa
from alembic import op
from clickhouse_sqlalchemy import engines
from clickhouse_sqlalchemy.types import (
    Array,
    Boolean,
    Date,
    DateTime64,
    Decimal,
    Int16,
    Int32,
    Int64,
    LowCardinality,
    Nullable,
    String,
)

# revision identifiers, used by Alembic.
revision = "55622187799e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.create_table(
        "fact_daily_leg_bucket",
        sa.Column("time", DateTime64(3, timezone="UTC")),
        sa.Column("day_x", Int16),
        sa.Column("event_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("transporter_type", LowCardinality(String)),
        sa.Column("entity_name", LowCardinality(String)),
        sa.Column("route_name", LowCardinality(String)),
        sa.Column("service_departure_date", Date),
        sa.Column("service_number", String),
        sa.Column("service_labels", Array(String)),
        sa.Column("service_status", LowCardinality(String)),
        sa.Column("service_origin_station_name", String),
        sa.Column("service_destination_station_name", String),
        sa.Column("service_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_budget_objective", Nullable(Decimal(10, 2))),
        sa.Column("service_yield_objective", Nullable(Decimal(10, 2))),
        sa.Column("is_service_peak_leg", Boolean),
        sa.Column("is_service_max_leg", Boolean),
        sa.Column("leg_id", Int64),
        sa.Column("leg_order", Int32),
        sa.Column("leg_origin_station_name", String),
        sa.Column("leg_destination_station_name", String),
        sa.Column("leg_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("leg_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("leg_list_alerts", Array(String)),
        sa.Column("reference_service_number", Nullable(String)),
        sa.Column("reference_service_departure_date", Nullable(Date)),
        sa.Column("cabin_name", LowCardinality(String)),
        sa.Column("family_name", LowCardinality(String)),
        sa.Column("bucket_name", LowCardinality(String)),
        sa.Column("cumulative_sum_net_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("sum_net_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("sum_net_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("sum_net_ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("sum_net_ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("availability_end_day", Nullable(Int32)),
        sa.Column("cumul_availability_end_day", Int32),
        sa.Column("cumulative_sum_net_bookings", Nullable(Int32)),
        sa.Column("sum_net_bookings", Nullable(Int32)),
        sa.Column("cabin_capacity", Nullable(Int32)),
        sa.Column("cabin_lid", Nullable(Int32)),
        sa.Column("bucket_authorization_end_day", Nullable(Int32)),
        sa.Column("is_last", Boolean),
        engines.ReplicatedMergeTree(
            table_path="/clickhouse/tables/{shard}/fact_daily_leg_bucket/",
            replica_name="{replica}",
            primary_key=("time", "service_departure_date"),
            order_by=(
                "time",
                "service_departure_date",
                "day_x",
                "service_number",
                "leg_id",
                "bucket_name",
            ),
        ),
        sa.text("INDEX is_last_index is_last TYPE set GRANULARITY 1"),
        clickhouse_cluster="wm",
    )

    op.create_table(
        "fact_daily_leg_physical_inventory",
        sa.Column("time", DateTime64(3, timezone="UTC")),
        sa.Column("day_x", Int16),
        sa.Column("event_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("transporter_type", LowCardinality(String)),
        sa.Column("entity_name", LowCardinality(String)),
        sa.Column("route_name", LowCardinality(String)),
        sa.Column("service_number", String),
        sa.Column("service_labels", Array(String)),
        sa.Column("service_status", LowCardinality(String)),
        sa.Column("service_departure_date", Date),
        sa.Column("service_origin_station_name", String),
        sa.Column("service_destination_station_name", String),
        sa.Column("service_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("is_service_peak_leg", Boolean),
        sa.Column("is_service_max_leg", Boolean),
        sa.Column("service_max_leg_origin_station_name", String),
        sa.Column("service_max_leg_destination_station_name", String),
        sa.Column("leg_id", Int64),
        sa.Column("leg_status", String),
        sa.Column("leg_origin_station_name", String),
        sa.Column("leg_destination_station_name", String),
        sa.Column("leg_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("leg_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("leg_order", Int32),
        sa.Column("leg_list_alerts", Array(String)),
        sa.Column("cabin_name", LowCardinality(String)),
        sa.Column("physical_inventory_name", LowCardinality(String)),
        sa.Column("physical_inventory_capacity", Nullable(Int32)),
        sa.Column("physical_inventory_lid", Nullable(Int32)),
        sa.Column("physical_availability_start_day", Nullable(Int32)),
        sa.Column("physical_availability_end_day", Nullable(Int32)),
        sa.Column("cumulative_sum_net_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("sum_net_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("sum_net_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("sum_net_ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("sum_net_ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_bookings", Int32),
        sa.Column("sum_net_bookings", Int32),
        sa.Column("forecast_full_day_x", Nullable(Int32)),
        sa.Column("optimization_full_day_x", Nullable(Int32)),
        sa.Column("unconstrained_demand_bookings", Nullable(Decimal(10, 2))),
        sa.Column("unconstrained_forecast_bookings", Nullable(Decimal(10, 2))),
        sa.Column("is_last", Boolean),
        engines.ReplicatedMergeTree(
            table_path="/clickhouse/tables/{shard}/fact_daily_leg_physical_inventory/",
            replica_name="{replica}",
            primary_key=("time", "service_departure_date"),
            order_by=(
                "time",
                "service_departure_date",
                "day_x",
                "service_number",
                "leg_id",
                "physical_inventory_name",
            ),
        ),
        sa.text("INDEX is_last_index is_last TYPE set GRANULARITY 1"),
        clickhouse_cluster="wm",
    )

    op.create_table(
        "fact_daily_od_bucket",
        sa.Column("time", DateTime64(3, timezone="UTC")),
        sa.Column("day_x", Int32),
        sa.Column("event_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("transporter_type", LowCardinality(String)),
        sa.Column("entity_name", LowCardinality(String)),
        sa.Column("route_name", LowCardinality(String)),
        sa.Column("service_id", Int64),
        sa.Column("service_departure_date", Date),
        sa.Column("service_number", String),
        sa.Column("service_labels", Array(String)),
        sa.Column("service_status", String),
        sa.Column("service_origin_station_name", String),
        sa.Column("service_destination_station_name", String),
        sa.Column("service_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_timezone", String),
        sa.Column("service_budget_objective", Nullable(Decimal(10, 2))),
        sa.Column("service_yield_objective", Nullable(Decimal(10, 2))),
        sa.Column("service_capacity", Nullable(Int32)),
        sa.Column("service_lid", Nullable(Int32)),
        sa.Column("service_max_leg_load_factor", Nullable(Decimal(10, 2))),
        sa.Column("service_max_leg_cumulative_sum_net_bookings", Nullable(Int32)),
        sa.Column("service_optimization_status", LowCardinality(String)),
        sa.Column("service_pointer", Boolean),
        sa.Column("market_name", LowCardinality(String)),
        sa.Column("market_rank", Int32),
        sa.Column("market_list_alerts", Array(String)),
        sa.Column("market_cabin_max_leg_load_factor", Nullable(Decimal(10, 2))),
        sa.Column("market_cabin_max_leg_cumulative_sum_net_bookings", Nullable(Int32)),
        sa.Column("od_id", Int64),
        sa.Column("od_status", String),
        sa.Column("od_origin_station_name", String),
        sa.Column("od_destination_station_name", String),
        sa.Column("od_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("od_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("od_rank", Int32),
        sa.Column("reference_service_number", Nullable(String)),
        sa.Column("reference_service_departure_date", Nullable(Date)),
        sa.Column("cabin_name", String),
        sa.Column("od_cabin_forecasted_traffic", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_forecasted_revenue_vat_inc", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_forecasted_revenue_vat_exc", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_optimized_traffic", Decimal(10, 2)),
        sa.Column("od_cabin_optimized_revenue_vat_inc", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_optimized_revenue_vat_exc", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_last_predicted", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_last_observed", Nullable(Decimal(10, 2))),
        sa.Column("od_cabin_pointer", Boolean),
        sa.Column("family_name", LowCardinality(String)),
        sa.Column("bucket_name", LowCardinality(String)),
        sa.Column("bucket_order", Int32),
        sa.Column("has_pricing_changed_day_x", Boolean),
        sa.Column("has_pricing_changed_bucket", Boolean),
        sa.Column("cumulative_sum_net_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("cumulative_sum_net_ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("sum_net_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("sum_net_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("sum_net_ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("sum_net_ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("availability_start_day", Nullable(Int32)),
        sa.Column("availability_end_day", Nullable(Int32)),
        sa.Column("cumul_availability_start_day", Int32),
        sa.Column("cumul_availability_end_day", Int32),
        sa.Column("cumulative_sum_net_bookings", Nullable(Int32)),
        sa.Column("sum_confirmed_bookings", Nullable(Int32)),
        sa.Column("sum_net_bookings", Nullable(Int32)),
        sa.Column("is_first_available_start_day", Boolean),
        sa.Column("is_first_available_end_day", Boolean),
        sa.Column("price_vat_inc", Nullable(Decimal(10, 2))),
        sa.Column("cabin_capacity", Nullable(Int32)),
        sa.Column("cabin_lid", Nullable(Int32)),
        sa.Column("bucket_authorization_start_day", Nullable(Int32)),
        sa.Column("bucket_authorization_end_day", Nullable(Int32)),
        sa.Column("forecast_full_day_x", Nullable(Int32)),
        sa.Column("optimization_full_day_x", Nullable(Int32)),
        sa.Column("unconstrained_demand_bookings", Nullable(Decimal(10, 2))),
        sa.Column("unconstrained_demand_revenue", Nullable(Decimal(10, 2))),
        sa.Column("unconstrained_forecast_bookings", Nullable(Decimal(10, 2))),
        sa.Column("unconstrained_forecast_revenue", Nullable(Decimal(10, 2))),
        sa.Column("is_last", Boolean),
        engines.ReplicatedMergeTree(
            table_path="/clickhouse/tables/{shard}/fact_daily_od_bucket/",
            replica_name="{replica}",
            primary_key=("time", "service_departure_date"),
            order_by=(
                "time",
                "service_departure_date",
                "service_number",
                "day_x",
                "service_id",
                "od_id",
                "bucket_name",
            ),
        ),
        sa.text("INDEX is_last_index is_last TYPE set GRANULARITY 1"),
        clickhouse_cluster="wm",
    )

    op.create_table(
        "fact_passenger_event",
        sa.Column("time", DateTime64(3, timezone="UTC")),
        sa.Column("day_x", Int32),
        sa.Column("event_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("transporter_type", LowCardinality(String)),
        sa.Column("entity_name", LowCardinality(String)),
        sa.Column("route_name", LowCardinality(String)),
        sa.Column("service_id", Int64),
        sa.Column("service_departure_date", Date),
        sa.Column("service_number", String),
        sa.Column("service_labels", Array(String)),
        sa.Column("service_status", LowCardinality(String)),
        sa.Column("service_origin_station_name", String),
        sa.Column("service_destination_station_name", String),
        sa.Column("service_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("service_timezone", LowCardinality(String)),
        sa.Column("market_id", Int64),
        sa.Column("market_name", LowCardinality(String)),
        sa.Column("market_rank", Int32),
        sa.Column("od_id", Int64),
        sa.Column("od_status", String),
        sa.Column("od_origin_station_name", String),
        sa.Column("od_destination_station_name", String),
        sa.Column("od_destination_station_id", Int64),
        sa.Column("od_departure_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("od_arrival_datetime", DateTime64(3, timezone="UTC")),
        sa.Column("od_rank", Int32),
        sa.Column("cabin_name", LowCardinality(String)),
        sa.Column("family_name", LowCardinality(String)),
        sa.Column("bucket_name", LowCardinality(String)),
        sa.Column("bucket_order", Int32),
        sa.Column("cabin_capacity", Nullable(Int32)),
        sa.Column("cabin_lid", Nullable(Int32)),
        sa.Column("physical_inventory_name", String),
        sa.Column("price_vat_inc", Decimal(10, 2)),
        sa.Column("price_vat_exc", Decimal(10, 2)),
        sa.Column("base_price_vat_inc", Decimal(10, 2)),
        sa.Column("bucket_price_vat_inc", Nullable(Decimal(10, 2))),
        sa.Column("ancillary_revenue_vat_inc", Decimal(10, 2)),
        sa.Column("ancillary_revenue_vat_exc", Decimal(10, 2)),
        sa.Column("event_type", LowCardinality(String)),
        sa.Column("booking_key", String),
        sa.Column("customer_key", Nullable(String)),
        sa.Column("ticket_category", Nullable(String)),
        sa.Column("ticket_key", String),
        sa.Column("fare_code", Nullable(String)),
        sa.Column("sale_channel_name", Nullable(String)),
        sa.Column("sale_channel_type", Nullable(String)),
        sa.Column("is_ticket_exchanged", Boolean),
        sa.Column("is_confirmed", Boolean),
        sa.Column("no_show", Boolean),
        engines.ReplicatedMergeTree(
            table_path="/clickhouse/tables/{shard}/fact_passenger_event/",
            replica_name="{replica}",
            primary_key=("time", "service_departure_date"),
            order_by=(
                "time",
                "service_departure_date",
                "service_number",
                "day_x",
                "service_id",
                "od_id",
            ),
        ),
        clickhouse_cluster="wm",
    )


def downgrade() -> None:
    op.drop_table("fact_daily_leg_bucket")
    op.drop_table("fact_daily_leg_physical_inventory")
    op.drop_table("fact_daily_od_bucket")
    op.drop_table("fact_passenger_event")
